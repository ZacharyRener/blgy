/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./scripts/main.tsx");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/main.scss":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/main.scss ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
exports = ___CSS_LOADER_API_IMPORT___(false);
exports.push([module.i, "@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@300;400&display=swap);"]);
// Module
exports.push([module.i, "/**\r\n * Import npm dependencies\r\n *\r\n * Prefix your imports with `~` to grab from node_modules/\r\n * @see https://github.com/webpack-contrib/sass-loader#imports\r\n */\n/** Import theme styles */\nheader {\n  position: fixed; }\n  header, header * {\n    z-index: 50; }\n  header .menu-item-has-children .menu-item {\n    padding: 5px 20px !important; }\n    header .menu-item-has-children .menu-item:nth-child(1) {\n      padding-top: 20px !important;\n      margin-top: 43px;\n      border-top: 7px solid #82b575;\n      position: relative; }\n      header .menu-item-has-children .menu-item:nth-child(1)::after {\n        padding: 0;\n        margin: 0;\n        display: block;\n        content: \"\";\n        width: 50%;\n        height: 7px;\n        background-color: #eee;\n        position: absolute;\n        right: 0;\n        top: -7px; }\n    header .menu-item-has-children .menu-item:nth-last-child(1) {\n      padding-bottom: 20px !important;\n      border-bottom-left-radius: 15px;\n      border-bottom-right-radius: 15px; }\n  @media (min-width: 2400px) {\n    header {\n      background: white;\n      background: linear-gradient(90deg, white 0%, white 35%, #eeeeee 35%, #eeeeee 100%); } }\n  @media (max-width: 2399px) and (min-width: 981px) {\n    header {\n      background: white;\n      background: linear-gradient(90deg, white 0%, white 30%, #eeeeee 30%, #eeeeee 100%); } }\n  @media (max-width: 980px) {\n    header {\n      background: white;\n      background: linear-gradient(90deg, white 0%, white 30%, #eeeeee 30%, #eeeeee 100%); } }\n  header .menu-item-has-children ul.dropdown-menu {\n    position: absolute;\n    top: 20px; }\n    header .menu-item-has-children ul.dropdown-menu li {\n      background: rgba(78, 86, 92, 0.97); }\n      header .menu-item-has-children ul.dropdown-menu li span {\n        color: white !important;\n        font-size: 16px !important;\n        font-weight: 300 !important; }\n    header .menu-item-has-children ul.dropdown-menu:not(.show) {\n      display: none; }\n    header .menu-item-has-children ul.dropdown-menu.show {\n      display: block; }\n  header ul#top-menu {\n    display: flex; }\n    header ul#top-menu li {\n      padding: 0 20px; }\n      header ul#top-menu li span {\n        font-family: 'Roboto', sans-serif;\n        font-size: 20px;\n        font-weight: 400;\n        text-transform: capitalize !important;\n        color: #4c5459; }\n  header div#nav {\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    width: auto !important;\n    margin: 0 !important;\n    float: right;\n    right: 0; }\n  header .upper-header.wrapper {\n    position: relative; }\n\n.flexwrapper, .flexwrapper * {\n  z-index: 1; }\n\n.flexwrapper {\n  position: relative;\n  padding-top: 134px; }\n\nbody.home .flex-direction-nav i {\n  color: white !important;\n  text-shadow: none; }\n\nbody.home .vc_row:nth-child(4) .wrapper {\n  padding-top: 0;\n  margin-top: -8px; }\n\nbody.home .vc_row:nth-child(4), body.home .vc_row:nth-child(4) * {\n  z-index: 1 !important; }\n\nbody.home .feat-text {\n  border-top: solid 16px #5a994b;\n  border-radius: 4px;\n  padding-top: 14px; }\n\nbody.home .flexwrapper, body.home .flexslider {\n  background-color: transparent !important;\n  box-shadow: none !important; }\n\nbody.home .flexslider {\n  padding: 0 !important;\n  margin: 0 !important;\n  border: none !important; }\n\nbody.home .flexwrapper .slidecontent {\n  background: rgba(0, 0, 0, 0.8);\n  position: relative !important;\n  max-width: 32vw;\n  border-bottom-left-radius: 15px !important;\n  border-bottom-right-radius: 15px !important;\n  border-top-left-radius: 0 !important;\n  border-top-right-radius: 15px !important;\n  padding-bottom: 40px !important; }\n\nbody.home .flexwrapper .flexslider .slides img {\n  height: 450px;\n  object-fit: cover; }\n\nbody.home .flexwrapper .slidecontent {\n  padding: 34px !important;\n  top: -350px !important; }\n\nbody.home .flexwrapper a.slidecta {\n  background-color: #7cb16f;\n  font-weight: 400;\n  font-size: 13px;\n  letter-spacing: 1.2px;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: calc( 100% - 40px);\n  border-bottom-left-radius: 15px;\n  border-bottom-right-radius: 15px;\n  padding-left: 34px; }\n\nbody.home .flexwrapper .homeslide .wrapper {\n  height: 0; }\n\nbody.home .flexwrapper h2.page-title {\n  text-transform: capitalize !important;\n  text-shadow: none !important;\n  font-weight: 300 !important; }\n\nbody.home .flexwrapper span.subtitle {\n  font-size: 15px !important;\n  font-weight: 300 !important;\n  text-shadow: none !important; }\n\nbody.home .recent-work {\n  padding-top: 35px !important; }\n  body.home .recent-work h3.main-title {\n    font-weight: 300 !important;\n    text-transform: capitalize !important;\n    font-size: 40px !important; }\n  body.home .recent-work span.main-subtitle {\n    font-weight: 600 !important;\n    text-transform: uppercase;\n    letter-spacing: 1.1px; }\n  body.home .recent-work img {\n    height: 291px;\n    object-fit: cover;\n    object-position: center; }\n    @media (min-width: 1469px) {\n      body.home .recent-work img {\n        width: 33.3vw !important; } }\n\nbody.home .testimonials h3.main-title {\n  font-weight: 300 !important;\n  text-transform: capitalize !important;\n  font-size: 40px !important; }\n\nbody.home .testimonials span.main-subtitle {\n  font-weight: 600 !important;\n  text-transform: uppercase;\n  letter-spacing: 1.1px;\n  color: #787878;\n  font-size: 15px; }\n\nbody.home .testimonials .flexslider, body.home .testimonials .flexslider * {\n  background: transparent !important;\n  box-shadow: none !important;\n  /* position: relative !important; */ }\n\nbody.home .testimonials p {\n  color: #000 !important;\n  display: block !important;\n  padding-bottom: 20px !important;\n  font-weight: 300 !important; }\n\nbody.home .testimonials .post-title {\n  color: #000 !important;\n  display: block !important;\n  padding-bottom: 20px !important;\n  font-weight: 300 !important;\n  font-size: 16px !important; }\n\nbody.home .testimonials ul.slides {\n  position: relative; }\n\nbody.home .testimonials h2.post-title {\n  position: absolute;\n  bottom: -70px;\n  border-top: 1px solid black;\n  padding-top: 28px;\n  left: 50%;\n  transform: translateX(-50%); }\n\nbody.home .testimonials .flex-caption {\n  text-align: center !important; }\n\nbody.home .testimonials ul.slides {\n  padding-bottom: 29px !important;\n  padding-left: 100px !important;\n  padding-right: 100px !important; }\n\nbody.home .testimonials .wpb_text_column.wpb_content_element {\n  margin-bottom: 0 !important; }\n\nbody.home .testimonials {\n  padding-bottom: 80px;\n  padding-top: 10px; }\n\nbody.home .getStarted {\n  padding-top: 69px; }\n  body.home .getStarted h3.main-title {\n    font-weight: 300 !important;\n    text-transform: capitalize !important;\n    font-size: 40px !important;\n    color: white !important; }\n  body.home .getStarted .getStartedText {\n    color: white !important;\n    text-align: center; }\n  body.home .getStarted .getStartedText {\n    margin-top: 39px;\n    padding-bottom: 110px; }\n  body.home .getStarted .getStartedText p {\n    color: white !important; }\n  body.home .getStarted .vc_column-inner {\n    padding-left: 100px !important;\n    padding-right: 100px !important; }\n  body.home .getStarted .getStartedBtn {\n    text-align: center;\n    position: absolute;\n    bottom: 35px;\n    left: 50%;\n    transform: translateX(-50%); }\n  body.home .getStarted button {\n    background: #4c545a !important;\n    color: white !important;\n    border: none !important;\n    text-transform: uppercase;\n    font-family: 'Roboto', sans-serif;\n    font-weight: 500;\n    font-size: 13px !important;\n    letter-spacing: 1.2px; }\n\nbody.home .getStarted {\n  background-size: cover !important; }\n\n.page-id-269 ul.post-tags.clearfix, .page-id-1857 ul.post-tags.clearfix {\n  list-style: none;\n  border: 1px solid #eee;\n  border-top: none;\n  margin: 0 !important;\n  padding: 14px 10px; }\n\n.page-id-269 .home-blog img, .page-id-1857 .home-blog img {\n  width: 100% !important;\n  object-fit: cover !important;\n  height: auto !important;\n  max-height: 150px; }\n\n.headerInfo {\n  background-image: url(http://blgy.local/wp-content/uploads/2020/08/topHeader.png);\n  padding: 25px 50px;\n  background-size: cover;\n  margin-bottom: 30px; }\n\n.customBtn {\n  background-color: #7cb06f;\n  display: inline-block;\n  padding: 5px 10px;\n  border-radius: 5px;\n  color: white; }\n\n.headerInfo {\n  display: flex; }\n\n.navSection {\n  display: flex;\n  justify-content: flex-end;\n  align-items: flex-end;\n  width: 100%; }\n\n.navWrapper {\n  display: flex;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  border-radius: 5px; }\n\n.navText {\n  color: white;\n  padding: 10px 10px;\n  font-size: 13px; }\n\n.navText:nth-child(1) {\n  border-right: 1px solid rgba(255, 255, 255, 0.2); }\n\n.navText:nth-last-child(1) {\n  border-left: 1px solid rgba(255, 255, 255, 0.2); }\n\n.offer-section {\n  display: flex;\n  align-items: center;\n  background-color: #7cb16f; }\n  .offer-section .image {\n    width: 35%;\n    height: 423px;\n    background-size: cover; }\n  .offer-section .content {\n    padding: 0 100px; }\n    .offer-section .content .main-title {\n      font-weight: 300 !important;\n      text-transform: capitalize !important;\n      font-size: 40px !important;\n      color: white !important;\n      margin: 0 auto !important;\n      text-align: left !important;\n      left: 0 !important; }\n    .offer-section .content .paragraph {\n      color: white !important;\n      margin-top: 30px !important;\n      margin-bottom: 40px; }\n    .offer-section .content button {\n      background: #4c545a !important;\n      color: white !important;\n      border: none !important;\n      text-transform: uppercase;\n      font-family: 'Roboto', sans-serif;\n      font-weight: 500;\n      font-size: 13px !important;\n      letter-spacing: 1.2px; }\n\nheader .menu-item-has-children ul.dropdown-menu.show {\n  min-width: 180px; }\n\n.button-section {\n  width: 200px; }\n", ""]);
// Exports
module.exports = exports;


/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);

      if (item[2]) {
        return "@media ".concat(item[2], " {").concat(content, "}");
      }

      return content;
    }).join('');
  }; // import a list of modules into the list
  // eslint-disable-next-line func-names


  list.i = function (modules, mediaQuery, dedupe) {
    if (typeof modules === 'string') {
      // eslint-disable-next-line no-param-reassign
      modules = [[null, modules, '']];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var i = 0; i < this.length; i++) {
        // eslint-disable-next-line prefer-destructuring
        var id = this[i][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _i = 0; _i < modules.length; _i++) {
      var item = [].concat(modules[_i]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        // eslint-disable-next-line no-continue
        continue;
      }

      if (mediaQuery) {
        if (!item[2]) {
          item[2] = mediaQuery;
        } else {
          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
        }
      }

      list.push(item);
    }
  };

  return list;
};

function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring

  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot || '').concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }

  return [content].join('\n');
} // Adapted from convert-source-map (MIT)


function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
  return "/*# ".concat(data, " */");
}

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isOldIE = function isOldIE() {
  var memo;
  return function memorize() {
    if (typeof memo === 'undefined') {
      // Test for IE <= 9 as proposed by Browserhacks
      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
      // Tests for existence of standard globals is to allow style-loader
      // to operate correctly into non-standard environments
      // @see https://github.com/webpack-contrib/style-loader/issues/177
      memo = Boolean(window && document && document.all && !window.atob);
    }

    return memo;
  };
}();

var getTarget = function getTarget() {
  var memo = {};
  return function memorize(target) {
    if (typeof memo[target] === 'undefined') {
      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself

      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
        try {
          // This will throw an exception if access to iframe is blocked
          // due to cross-origin restrictions
          styleTarget = styleTarget.contentDocument.head;
        } catch (e) {
          // istanbul ignore next
          styleTarget = null;
        }
      }

      memo[target] = styleTarget;
    }

    return memo[target];
  };
}();

var stylesInDom = [];

function getIndexByIdentifier(identifier) {
  var result = -1;

  for (var i = 0; i < stylesInDom.length; i++) {
    if (stylesInDom[i].identifier === identifier) {
      result = i;
      break;
    }
  }

  return result;
}

function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];

  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var index = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3]
    };

    if (index !== -1) {
      stylesInDom[index].references++;
      stylesInDom[index].updater(obj);
    } else {
      stylesInDom.push({
        identifier: identifier,
        updater: addStyle(obj, options),
        references: 1
      });
    }

    identifiers.push(identifier);
  }

  return identifiers;
}

function insertStyleElement(options) {
  var style = document.createElement('style');
  var attributes = options.attributes || {};

  if (typeof attributes.nonce === 'undefined') {
    var nonce =  true ? __webpack_require__.nc : undefined;

    if (nonce) {
      attributes.nonce = nonce;
    }
  }

  Object.keys(attributes).forEach(function (key) {
    style.setAttribute(key, attributes[key]);
  });

  if (typeof options.insert === 'function') {
    options.insert(style);
  } else {
    var target = getTarget(options.insert || 'head');

    if (!target) {
      throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
    }

    target.appendChild(style);
  }

  return style;
}

function removeStyleElement(style) {
  // istanbul ignore if
  if (style.parentNode === null) {
    return false;
  }

  style.parentNode.removeChild(style);
}
/* istanbul ignore next  */


var replaceText = function replaceText() {
  var textStore = [];
  return function replace(index, replacement) {
    textStore[index] = replacement;
    return textStore.filter(Boolean).join('\n');
  };
}();

function applyToSingletonTag(style, index, remove, obj) {
  var css = remove ? '' : obj.media ? "@media ".concat(obj.media, " {").concat(obj.css, "}") : obj.css; // For old IE

  /* istanbul ignore if  */

  if (style.styleSheet) {
    style.styleSheet.cssText = replaceText(index, css);
  } else {
    var cssNode = document.createTextNode(css);
    var childNodes = style.childNodes;

    if (childNodes[index]) {
      style.removeChild(childNodes[index]);
    }

    if (childNodes.length) {
      style.insertBefore(cssNode, childNodes[index]);
    } else {
      style.appendChild(cssNode);
    }
  }
}

function applyToTag(style, options, obj) {
  var css = obj.css;
  var media = obj.media;
  var sourceMap = obj.sourceMap;

  if (media) {
    style.setAttribute('media', media);
  } else {
    style.removeAttribute('media');
  }

  if (sourceMap && btoa) {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  } // For old IE

  /* istanbul ignore if  */


  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    while (style.firstChild) {
      style.removeChild(style.firstChild);
    }

    style.appendChild(document.createTextNode(css));
  }
}

var singleton = null;
var singletonCounter = 0;

function addStyle(obj, options) {
  var style;
  var update;
  var remove;

  if (options.singleton) {
    var styleIndex = singletonCounter++;
    style = singleton || (singleton = insertStyleElement(options));
    update = applyToSingletonTag.bind(null, style, styleIndex, false);
    remove = applyToSingletonTag.bind(null, style, styleIndex, true);
  } else {
    style = insertStyleElement(options);
    update = applyToTag.bind(null, style, options);

    remove = function remove() {
      removeStyleElement(style);
    };
  }

  update(obj);
  return function updateStyle(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {
        return;
      }

      update(obj = newObj);
    } else {
      remove();
    }
  };
}

module.exports = function (list, options) {
  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
  // tags it will allow on a page

  if (!options.singleton && typeof options.singleton !== 'boolean') {
    options.singleton = isOldIE();
  }

  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];

    if (Object.prototype.toString.call(newList) !== '[object Array]') {
      return;
    }

    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDom[index].references--;
    }

    var newLastIdentifiers = modulesToDom(newList, options);

    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];

      var _index = getIndexByIdentifier(_identifier);

      if (stylesInDom[_index].references === 0) {
        stylesInDom[_index].updater();

        stylesInDom.splice(_index, 1);
      }
    }

    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ "./scripts/main.tsx":
/*!**************************!*\
  !*** ./scripts/main.tsx ***!
  \**************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _util_Router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/Router */ "./scripts/util/Router.js");
/* harmony import */ var _util_Router__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_util_Router__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _routes_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./routes/common */ "./scripts/routes/common.tsx");
/* harmony import */ var _styles_main_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../styles/main.scss */ "./styles/main.scss");
/* harmony import */ var _styles_main_scss__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_styles_main_scss__WEBPACK_IMPORTED_MODULE_2__);



var routes = new _util_Router__WEBPACK_IMPORTED_MODULE_0___default.a({
    // All pages
    common: _routes_common__WEBPACK_IMPORTED_MODULE_1__["default"],
});
document.addEventListener('DOMContentLoaded', function () { routes.loadEvents(); });


/***/ }),

/***/ "./scripts/routes/common.tsx":
/*!***********************************!*\
  !*** ./scripts/routes/common.tsx ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ({
    init: function () {
        this.displaySubMenuOnHover();
    },
    finalize: function () {
    },
    displaySubMenuOnHover: function () {
        var itemsWithChild = document.querySelectorAll('.menu-item-has-children');
        itemsWithChild.forEach(function (item) {
            item.onmouseenter = function (e) {
                var target = e.target;
                var dropdownMenu = target.children[1];
                dropdownMenu.classList.add('show');
            };
            item.onmouseleave = function (e) {
                var target = e.target;
                var dropdownMenu = target.children[1];
                dropdownMenu.classList.remove('show');
            };
        });
    }
});


/***/ }),

/***/ "./scripts/util/Router.js":
/*!********************************!*\
  !*** ./scripts/util/Router.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _camelCase = __webpack_require__(/*! ./camelCase */ "./scripts/util/camelCase.js");

var _camelCase2 = _interopRequireDefault(_camelCase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * DOM-based Routing
 *
 * Based on {@link http://goo.gl/EUTi53|Markup-based Unobtrusive Comprehensive DOM-ready Execution} by Paul Irish
 *
 * The routing fires all common scripts, followed by the page specific scripts.
 * Add additional events for more control over timing e.g. a finalize event
 */
var Router = function () {

  /**
   * Create a new Router
   * @param {Object} routes
   */
  function Router(routes) {
    _classCallCheck(this, Router);

    this.routes = routes;
  }

  /**
   * Fire Router events
   * @param {string} route DOM-based route derived from body classes (`<body class="...">`)
   * @param {string} [event] Events on the route. By default, `init` and `finalize` events are called.
   * @param {string} [arg] Any custom argument to be passed to the event.
   */


  _createClass(Router, [{
    key: 'fire',
    value: function fire(route) {
      var event = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'init';
      var arg = arguments[2];

      document.dispatchEvent(new CustomEvent('routed', {
        bubbles: true,
        detail: {
          route: route,
          fn: event
        }
      }));

      var fire = route !== '' && this.routes[route] && typeof this.routes[route][event] === 'function';
      if (fire) {
        this.routes[route][event](arg);
      }
    }

    /**
     * Automatically load and fire Router events
     *
     * Events are fired in the following order:
     *  * common init
     *  * page-specific init
     *  * page-specific finalize
     *  * common finalize
     */

  }, {
    key: 'loadEvents',
    value: function loadEvents() {
      var _this = this;

      // Fire common init JS
      this.fire('common');

      // Fire page-specific init JS, and then finalize JS
      document.body.className.toLowerCase().replace(/-/g, '_').split(/\s+/).map(_camelCase2.default).forEach(function (className) {
        _this.fire(className);
        _this.fire(className, 'finalize');
      });

      // Fire common finalize JS
      this.fire('common', 'finalize');
    }
  }]);

  return Router;
}();

exports.default = Router;

/***/ }),

/***/ "./scripts/util/camelCase.js":
/*!***********************************!*\
  !*** ./scripts/util/camelCase.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

/**
 * the most terrible camelizer on the internet, guaranteed!
 * @param {string} str String that isn't camel-case, e.g., CAMeL_CaSEiS-harD
 * @return {string} String converted to camel-case, e.g., camelCaseIsHard
 */
exports.default = function (str) {
  return '' + str.charAt(0).toLowerCase() + str.replace(/[\W_]/g, '|').split('|').map(function (part) {
    return '' + part.charAt(0).toUpperCase() + part.slice(1);
  }).join('').slice(1);
};

/***/ }),

/***/ "./styles/main.scss":
/*!**************************!*\
  !*** ./styles/main.scss ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(/*! ../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
            var content = __webpack_require__(/*! !../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!./main.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/main.scss");

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = "head";
options.singleton = false;

var update = api(content, options);



module.exports = content.locals || {};

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3R5bGVzL21haW4uc2NzcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly8vLi9zY3JpcHRzL21haW4udHN4Iiwid2VicGFjazovLy8uL3NjcmlwdHMvcm91dGVzL2NvbW1vbi50c3giLCJ3ZWJwYWNrOi8vLy4vc2NyaXB0cy91dGlsL1JvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi9zY3JpcHRzL3V0aWwvY2FtZWxDYXNlLmpzIiwid2VicGFjazovLy8uL3N0eWxlcy9tYWluLnNjc3M/N2YyNCJdLCJuYW1lcyI6WyJSb3V0ZXIiLCJyb3V0ZXMiLCJyb3V0ZSIsImV2ZW50IiwiYXJnIiwiZG9jdW1lbnQiLCJkaXNwYXRjaEV2ZW50IiwiQ3VzdG9tRXZlbnQiLCJidWJibGVzIiwiZGV0YWlsIiwiZm4iLCJmaXJlIiwiYm9keSIsImNsYXNzTmFtZSIsInRvTG93ZXJDYXNlIiwicmVwbGFjZSIsInNwbGl0IiwibWFwIiwiY2FtZWxDYXNlIiwiZm9yRWFjaCIsInN0ciIsImNoYXJBdCIsInBhcnQiLCJ0b1VwcGVyQ2FzZSIsInNsaWNlIiwiam9pbiJdLCJtYXBwaW5ncyI6IjtRQUFBO1FBQ0E7O1FBRUE7UUFDQTs7UUFFQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTs7UUFFQTtRQUNBOztRQUVBO1FBQ0E7O1FBRUE7UUFDQTtRQUNBOzs7UUFHQTtRQUNBOztRQUVBO1FBQ0E7O1FBRUE7UUFDQTtRQUNBO1FBQ0EsMENBQTBDLGdDQUFnQztRQUMxRTtRQUNBOztRQUVBO1FBQ0E7UUFDQTtRQUNBLHdEQUF3RCxrQkFBa0I7UUFD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TCxDQUFVRSxTQUFWO0FBQ0EsY0FBS0YsSUFBTCxDQUFVRSxTQUFWLEVBQXFCLFVBQXJCO0FBQ0QsT0FSSDs7QUFVQTtBQUNBLFdBQUtGLElBQUwsQ0FBVSxRQUFWLEVBQW9CLFVBQXBCO0FBQ0Q7Ozs7OztrQkFHWVgsTTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDdEVmOzs7OztrQkFLZTtBQUFBLGNBQVVvQixJQUFJQyxNQUFKLENBQVcsQ0FBWCxFQUFjUCxXQUFkLEVBQVYsR0FBd0NNLElBQUlMLE9BQUosQ0FBWSxRQUFaLEVBQXNCLEdBQXRCLEVBQTJCQyxLQUEzQixDQUFpQyxHQUFqQyxFQUNwREMsR0FEb0QsQ0FDaEQ7QUFBQSxnQkFBV0ssS0FBS0QsTUFBTCxDQUFZLENBQVosRUFBZUUsV0FBZixFQUFYLEdBQTBDRCxLQUFLRSxLQUFMLENBQVcsQ0FBWCxDQUExQztBQUFBLEdBRGdELEVBRXBEQyxJQUZvRCxDQUUvQyxFQUYrQyxFQUdwREQsS0FIb0QsQ0FHOUMsQ0FIOEMsQ0FBeEM7QUFBQSxDOzs7Ozs7Ozs7OztBQ0xmLFVBQVUsbUJBQU8sQ0FBQyxtSkFBd0U7QUFDMUYsMEJBQTBCLG1CQUFPLENBQUMsb01BQThGOztBQUVoSTs7QUFFQTtBQUNBLDBCQUEwQixRQUFTO0FBQ25DOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7Ozs7QUFJQSxzQyIsImZpbGUiOiJtYWluLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSBcIi4vc2NyaXB0cy9tYWluLnRzeFwiKTtcbiIsIi8vIEltcG9ydHNcbnZhciBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKTtcbmV4cG9ydHMgPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oZmFsc2UpO1xuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Sb2JvdG86d2dodEAzMDA7NDAwJmRpc3BsYXk9c3dhcCk7XCJdKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLyoqXFxyXFxuICogSW1wb3J0IG5wbSBkZXBlbmRlbmNpZXNcXHJcXG4gKlxcclxcbiAqIFByZWZpeCB5b3VyIGltcG9ydHMgd2l0aCBgfmAgdG8gZ3JhYiBmcm9tIG5vZGVfbW9kdWxlcy9cXHJcXG4gKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc2Fzcy1sb2FkZXIjaW1wb3J0c1xcclxcbiAqL1xcbi8qKiBJbXBvcnQgdGhlbWUgc3R5bGVzICovXFxuaGVhZGVyIHtcXG4gIHBvc2l0aW9uOiBmaXhlZDsgfVxcbiAgaGVhZGVyLCBoZWFkZXIgKiB7XFxuICAgIHotaW5kZXg6IDUwOyB9XFxuICBoZWFkZXIgLm1lbnUtaXRlbS1oYXMtY2hpbGRyZW4gLm1lbnUtaXRlbSB7XFxuICAgIHBhZGRpbmc6IDVweCAyMHB4ICFpbXBvcnRhbnQ7IH1cXG4gICAgaGVhZGVyIC5tZW51LWl0ZW0taGFzLWNoaWxkcmVuIC5tZW51LWl0ZW06bnRoLWNoaWxkKDEpIHtcXG4gICAgICBwYWRkaW5nLXRvcDogMjBweCAhaW1wb3J0YW50O1xcbiAgICAgIG1hcmdpbi10b3A6IDQzcHg7XFxuICAgICAgYm9yZGVyLXRvcDogN3B4IHNvbGlkICM4MmI1NzU7XFxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XFxuICAgICAgaGVhZGVyIC5tZW51LWl0ZW0taGFzLWNoaWxkcmVuIC5tZW51LWl0ZW06bnRoLWNoaWxkKDEpOjphZnRlciB7XFxuICAgICAgICBwYWRkaW5nOiAwO1xcbiAgICAgICAgbWFyZ2luOiAwO1xcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XFxuICAgICAgICBjb250ZW50OiBcXFwiXFxcIjtcXG4gICAgICAgIHdpZHRoOiA1MCU7XFxuICAgICAgICBoZWlnaHQ6IDdweDtcXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNlZWU7XFxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgICAgICByaWdodDogMDtcXG4gICAgICAgIHRvcDogLTdweDsgfVxcbiAgICBoZWFkZXIgLm1lbnUtaXRlbS1oYXMtY2hpbGRyZW4gLm1lbnUtaXRlbTpudGgtbGFzdC1jaGlsZCgxKSB7XFxuICAgICAgcGFkZGluZy1ib3R0b206IDIwcHggIWltcG9ydGFudDtcXG4gICAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAxNXB4O1xcbiAgICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAxNXB4OyB9XFxuICBAbWVkaWEgKG1pbi13aWR0aDogMjQwMHB4KSB7XFxuICAgIGhlYWRlciB7XFxuICAgICAgYmFja2dyb3VuZDogd2hpdGU7XFxuICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCB3aGl0ZSAwJSwgd2hpdGUgMzUlLCAjZWVlZWVlIDM1JSwgI2VlZWVlZSAxMDAlKTsgfSB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogMjM5OXB4KSBhbmQgKG1pbi13aWR0aDogOTgxcHgpIHtcXG4gICAgaGVhZGVyIHtcXG4gICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcXG4gICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsIHdoaXRlIDAlLCB3aGl0ZSAzMCUsICNlZWVlZWUgMzAlLCAjZWVlZWVlIDEwMCUpOyB9IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA5ODBweCkge1xcbiAgICBoZWFkZXIge1xcbiAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xcbiAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg5MGRlZywgd2hpdGUgMCUsIHdoaXRlIDMwJSwgI2VlZWVlZSAzMCUsICNlZWVlZWUgMTAwJSk7IH0gfVxcbiAgaGVhZGVyIC5tZW51LWl0ZW0taGFzLWNoaWxkcmVuIHVsLmRyb3Bkb3duLW1lbnUge1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHRvcDogMjBweDsgfVxcbiAgICBoZWFkZXIgLm1lbnUtaXRlbS1oYXMtY2hpbGRyZW4gdWwuZHJvcGRvd24tbWVudSBsaSB7XFxuICAgICAgYmFja2dyb3VuZDogcmdiYSg3OCwgODYsIDkyLCAwLjk3KTsgfVxcbiAgICAgIGhlYWRlciAubWVudS1pdGVtLWhhcy1jaGlsZHJlbiB1bC5kcm9wZG93bi1tZW51IGxpIHNwYW4ge1xcbiAgICAgICAgY29sb3I6IHdoaXRlICFpbXBvcnRhbnQ7XFxuICAgICAgICBmb250LXNpemU6IDE2cHggIWltcG9ydGFudDtcXG4gICAgICAgIGZvbnQtd2VpZ2h0OiAzMDAgIWltcG9ydGFudDsgfVxcbiAgICBoZWFkZXIgLm1lbnUtaXRlbS1oYXMtY2hpbGRyZW4gdWwuZHJvcGRvd24tbWVudTpub3QoLnNob3cpIHtcXG4gICAgICBkaXNwbGF5OiBub25lOyB9XFxuICAgIGhlYWRlciAubWVudS1pdGVtLWhhcy1jaGlsZHJlbiB1bC5kcm9wZG93bi1tZW51LnNob3cge1xcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyB9XFxuICBoZWFkZXIgdWwjdG9wLW1lbnUge1xcbiAgICBkaXNwbGF5OiBmbGV4OyB9XFxuICAgIGhlYWRlciB1bCN0b3AtbWVudSBsaSB7XFxuICAgICAgcGFkZGluZzogMCAyMHB4OyB9XFxuICAgICAgaGVhZGVyIHVsI3RvcC1tZW51IGxpIHNwYW4ge1xcbiAgICAgICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xcbiAgICAgICAgZm9udC1zaXplOiAyMHB4O1xcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplICFpbXBvcnRhbnQ7XFxuICAgICAgICBjb2xvcjogIzRjNTQ1OTsgfVxcbiAgaGVhZGVyIGRpdiNuYXYge1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHRvcDogNTAlO1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XFxuICAgIHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7XFxuICAgIG1hcmdpbjogMCAhaW1wb3J0YW50O1xcbiAgICBmbG9hdDogcmlnaHQ7XFxuICAgIHJpZ2h0OiAwOyB9XFxuICBoZWFkZXIgLnVwcGVyLWhlYWRlci53cmFwcGVyIHtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XFxuXFxuLmZsZXh3cmFwcGVyLCAuZmxleHdyYXBwZXIgKiB7XFxuICB6LWluZGV4OiAxOyB9XFxuXFxuLmZsZXh3cmFwcGVyIHtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHBhZGRpbmctdG9wOiAxMzRweDsgfVxcblxcbmJvZHkuaG9tZSAuZmxleC1kaXJlY3Rpb24tbmF2IGkge1xcbiAgY29sb3I6IHdoaXRlICFpbXBvcnRhbnQ7XFxuICB0ZXh0LXNoYWRvdzogbm9uZTsgfVxcblxcbmJvZHkuaG9tZSAudmNfcm93Om50aC1jaGlsZCg0KSAud3JhcHBlciB7XFxuICBwYWRkaW5nLXRvcDogMDtcXG4gIG1hcmdpbi10b3A6IC04cHg7IH1cXG5cXG5ib2R5LmhvbWUgLnZjX3JvdzpudGgtY2hpbGQoNCksIGJvZHkuaG9tZSAudmNfcm93Om50aC1jaGlsZCg0KSAqIHtcXG4gIHotaW5kZXg6IDEgIWltcG9ydGFudDsgfVxcblxcbmJvZHkuaG9tZSAuZmVhdC10ZXh0IHtcXG4gIGJvcmRlci10b3A6IHNvbGlkIDE2cHggIzVhOTk0YjtcXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcXG4gIHBhZGRpbmctdG9wOiAxNHB4OyB9XFxuXFxuYm9keS5ob21lIC5mbGV4d3JhcHBlciwgYm9keS5ob21lIC5mbGV4c2xpZGVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XFxuICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7IH1cXG5cXG5ib2R5LmhvbWUgLmZsZXhzbGlkZXIge1xcbiAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xcbiAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XFxuICBib3JkZXI6IG5vbmUgIWltcG9ydGFudDsgfVxcblxcbmJvZHkuaG9tZSAuZmxleHdyYXBwZXIgLnNsaWRlY29udGVudCB7XFxuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuOCk7XFxuICBwb3NpdGlvbjogcmVsYXRpdmUgIWltcG9ydGFudDtcXG4gIG1heC13aWR0aDogMzJ2dztcXG4gIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDE1cHggIWltcG9ydGFudDtcXG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAxNXB4ICFpbXBvcnRhbnQ7XFxuICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwICFpbXBvcnRhbnQ7XFxuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMTVweCAhaW1wb3J0YW50O1xcbiAgcGFkZGluZy1ib3R0b206IDQwcHggIWltcG9ydGFudDsgfVxcblxcbmJvZHkuaG9tZSAuZmxleHdyYXBwZXIgLmZsZXhzbGlkZXIgLnNsaWRlcyBpbWcge1xcbiAgaGVpZ2h0OiA0NTBweDtcXG4gIG9iamVjdC1maXQ6IGNvdmVyOyB9XFxuXFxuYm9keS5ob21lIC5mbGV4d3JhcHBlciAuc2xpZGVjb250ZW50IHtcXG4gIHBhZGRpbmc6IDM0cHggIWltcG9ydGFudDtcXG4gIHRvcDogLTM1MHB4ICFpbXBvcnRhbnQ7IH1cXG5cXG5ib2R5LmhvbWUgLmZsZXh3cmFwcGVyIGEuc2xpZGVjdGEge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzdjYjE2ZjtcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxuICBmb250LXNpemU6IDEzcHg7XFxuICBsZXR0ZXItc3BhY2luZzogMS4ycHg7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBib3R0b206IDA7XFxuICBsZWZ0OiAwO1xcbiAgd2lkdGg6IGNhbGMoIDEwMCUgLSA0MHB4KTtcXG4gIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDE1cHg7XFxuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMTVweDtcXG4gIHBhZGRpbmctbGVmdDogMzRweDsgfVxcblxcbmJvZHkuaG9tZSAuZmxleHdyYXBwZXIgLmhvbWVzbGlkZSAud3JhcHBlciB7XFxuICBoZWlnaHQ6IDA7IH1cXG5cXG5ib2R5LmhvbWUgLmZsZXh3cmFwcGVyIGgyLnBhZ2UtdGl0bGUge1xcbiAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemUgIWltcG9ydGFudDtcXG4gIHRleHQtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XFxuICBmb250LXdlaWdodDogMzAwICFpbXBvcnRhbnQ7IH1cXG5cXG5ib2R5LmhvbWUgLmZsZXh3cmFwcGVyIHNwYW4uc3VidGl0bGUge1xcbiAgZm9udC1zaXplOiAxNXB4ICFpbXBvcnRhbnQ7XFxuICBmb250LXdlaWdodDogMzAwICFpbXBvcnRhbnQ7XFxuICB0ZXh0LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50OyB9XFxuXFxuYm9keS5ob21lIC5yZWNlbnQtd29yayB7XFxuICBwYWRkaW5nLXRvcDogMzVweCAhaW1wb3J0YW50OyB9XFxuICBib2R5LmhvbWUgLnJlY2VudC13b3JrIGgzLm1haW4tdGl0bGUge1xcbiAgICBmb250LXdlaWdodDogMzAwICFpbXBvcnRhbnQ7XFxuICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplICFpbXBvcnRhbnQ7XFxuICAgIGZvbnQtc2l6ZTogNDBweCAhaW1wb3J0YW50OyB9XFxuICBib2R5LmhvbWUgLnJlY2VudC13b3JrIHNwYW4ubWFpbi1zdWJ0aXRsZSB7XFxuICAgIGZvbnQtd2VpZ2h0OiA2MDAgIWltcG9ydGFudDtcXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcXG4gICAgbGV0dGVyLXNwYWNpbmc6IDEuMXB4OyB9XFxuICBib2R5LmhvbWUgLnJlY2VudC13b3JrIGltZyB7XFxuICAgIGhlaWdodDogMjkxcHg7XFxuICAgIG9iamVjdC1maXQ6IGNvdmVyO1xcbiAgICBvYmplY3QtcG9zaXRpb246IGNlbnRlcjsgfVxcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTQ2OXB4KSB7XFxuICAgICAgYm9keS5ob21lIC5yZWNlbnQtd29yayBpbWcge1xcbiAgICAgICAgd2lkdGg6IDMzLjN2dyAhaW1wb3J0YW50OyB9IH1cXG5cXG5ib2R5LmhvbWUgLnRlc3RpbW9uaWFscyBoMy5tYWluLXRpdGxlIHtcXG4gIGZvbnQtd2VpZ2h0OiAzMDAgIWltcG9ydGFudDtcXG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplICFpbXBvcnRhbnQ7XFxuICBmb250LXNpemU6IDQwcHggIWltcG9ydGFudDsgfVxcblxcbmJvZHkuaG9tZSAudGVzdGltb25pYWxzIHNwYW4ubWFpbi1zdWJ0aXRsZSB7XFxuICBmb250LXdlaWdodDogNjAwICFpbXBvcnRhbnQ7XFxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xcbiAgbGV0dGVyLXNwYWNpbmc6IDEuMXB4O1xcbiAgY29sb3I6ICM3ODc4Nzg7XFxuICBmb250LXNpemU6IDE1cHg7IH1cXG5cXG5ib2R5LmhvbWUgLnRlc3RpbW9uaWFscyAuZmxleHNsaWRlciwgYm9keS5ob21lIC50ZXN0aW1vbmlhbHMgLmZsZXhzbGlkZXIgKiB7XFxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xcbiAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xcbiAgLyogcG9zaXRpb246IHJlbGF0aXZlICFpbXBvcnRhbnQ7ICovIH1cXG5cXG5ib2R5LmhvbWUgLnRlc3RpbW9uaWFscyBwIHtcXG4gIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XFxuICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xcbiAgcGFkZGluZy1ib3R0b206IDIwcHggIWltcG9ydGFudDtcXG4gIGZvbnQtd2VpZ2h0OiAzMDAgIWltcG9ydGFudDsgfVxcblxcbmJvZHkuaG9tZSAudGVzdGltb25pYWxzIC5wb3N0LXRpdGxlIHtcXG4gIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XFxuICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xcbiAgcGFkZGluZy1ib3R0b206IDIwcHggIWltcG9ydGFudDtcXG4gIGZvbnQtd2VpZ2h0OiAzMDAgIWltcG9ydGFudDtcXG4gIGZvbnQtc2l6ZTogMTZweCAhaW1wb3J0YW50OyB9XFxuXFxuYm9keS5ob21lIC50ZXN0aW1vbmlhbHMgdWwuc2xpZGVzIHtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxcblxcbmJvZHkuaG9tZSAudGVzdGltb25pYWxzIGgyLnBvc3QtdGl0bGUge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgYm90dG9tOiAtNzBweDtcXG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCBibGFjaztcXG4gIHBhZGRpbmctdG9wOiAyOHB4O1xcbiAgbGVmdDogNTAlO1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpOyB9XFxuXFxuYm9keS5ob21lIC50ZXN0aW1vbmlhbHMgLmZsZXgtY2FwdGlvbiB7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDsgfVxcblxcbmJvZHkuaG9tZSAudGVzdGltb25pYWxzIHVsLnNsaWRlcyB7XFxuICBwYWRkaW5nLWJvdHRvbTogMjlweCAhaW1wb3J0YW50O1xcbiAgcGFkZGluZy1sZWZ0OiAxMDBweCAhaW1wb3J0YW50O1xcbiAgcGFkZGluZy1yaWdodDogMTAwcHggIWltcG9ydGFudDsgfVxcblxcbmJvZHkuaG9tZSAudGVzdGltb25pYWxzIC53cGJfdGV4dF9jb2x1bW4ud3BiX2NvbnRlbnRfZWxlbWVudCB7XFxuICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7IH1cXG5cXG5ib2R5LmhvbWUgLnRlc3RpbW9uaWFscyB7XFxuICBwYWRkaW5nLWJvdHRvbTogODBweDtcXG4gIHBhZGRpbmctdG9wOiAxMHB4OyB9XFxuXFxuYm9keS5ob21lIC5nZXRTdGFydGVkIHtcXG4gIHBhZGRpbmctdG9wOiA2OXB4OyB9XFxuICBib2R5LmhvbWUgLmdldFN0YXJ0ZWQgaDMubWFpbi10aXRsZSB7XFxuICAgIGZvbnQtd2VpZ2h0OiAzMDAgIWltcG9ydGFudDtcXG4gICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemUgIWltcG9ydGFudDtcXG4gICAgZm9udC1zaXplOiA0MHB4ICFpbXBvcnRhbnQ7XFxuICAgIGNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50OyB9XFxuICBib2R5LmhvbWUgLmdldFN0YXJ0ZWQgLmdldFN0YXJ0ZWRUZXh0IHtcXG4gICAgY29sb3I6IHdoaXRlICFpbXBvcnRhbnQ7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxcbiAgYm9keS5ob21lIC5nZXRTdGFydGVkIC5nZXRTdGFydGVkVGV4dCB7XFxuICAgIG1hcmdpbi10b3A6IDM5cHg7XFxuICAgIHBhZGRpbmctYm90dG9tOiAxMTBweDsgfVxcbiAgYm9keS5ob21lIC5nZXRTdGFydGVkIC5nZXRTdGFydGVkVGV4dCBwIHtcXG4gICAgY29sb3I6IHdoaXRlICFpbXBvcnRhbnQ7IH1cXG4gIGJvZHkuaG9tZSAuZ2V0U3RhcnRlZCAudmNfY29sdW1uLWlubmVyIHtcXG4gICAgcGFkZGluZy1sZWZ0OiAxMDBweCAhaW1wb3J0YW50O1xcbiAgICBwYWRkaW5nLXJpZ2h0OiAxMDBweCAhaW1wb3J0YW50OyB9XFxuICBib2R5LmhvbWUgLmdldFN0YXJ0ZWQgLmdldFN0YXJ0ZWRCdG4ge1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgYm90dG9tOiAzNXB4O1xcbiAgICBsZWZ0OiA1MCU7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTsgfVxcbiAgYm9keS5ob21lIC5nZXRTdGFydGVkIGJ1dHRvbiB7XFxuICAgIGJhY2tncm91bmQ6ICM0YzU0NWEgIWltcG9ydGFudDtcXG4gICAgY29sb3I6IHdoaXRlICFpbXBvcnRhbnQ7XFxuICAgIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50O1xcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xcbiAgICBmb250LWZhbWlseTogJ1JvYm90bycsIHNhbnMtc2VyaWY7XFxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XFxuICAgIGZvbnQtc2l6ZTogMTNweCAhaW1wb3J0YW50O1xcbiAgICBsZXR0ZXItc3BhY2luZzogMS4ycHg7IH1cXG5cXG5ib2R5LmhvbWUgLmdldFN0YXJ0ZWQge1xcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlciAhaW1wb3J0YW50OyB9XFxuXFxuLnBhZ2UtaWQtMjY5IHVsLnBvc3QtdGFncy5jbGVhcmZpeCwgLnBhZ2UtaWQtMTg1NyB1bC5wb3N0LXRhZ3MuY2xlYXJmaXgge1xcbiAgbGlzdC1zdHlsZTogbm9uZTtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICNlZWU7XFxuICBib3JkZXItdG9wOiBub25lO1xcbiAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XFxuICBwYWRkaW5nOiAxNHB4IDEwcHg7IH1cXG5cXG4ucGFnZS1pZC0yNjkgLmhvbWUtYmxvZyBpbWcsIC5wYWdlLWlkLTE4NTcgLmhvbWUtYmxvZyBpbWcge1xcbiAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcXG4gIG9iamVjdC1maXQ6IGNvdmVyICFpbXBvcnRhbnQ7XFxuICBoZWlnaHQ6IGF1dG8gIWltcG9ydGFudDtcXG4gIG1heC1oZWlnaHQ6IDE1MHB4OyB9XFxuXFxuLmhlYWRlckluZm8ge1xcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKGh0dHA6Ly9ibGd5LmxvY2FsL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzA4L3RvcEhlYWRlci5wbmcpO1xcbiAgcGFkZGluZzogMjVweCA1MHB4O1xcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcXG4gIG1hcmdpbi1ib3R0b206IDMwcHg7IH1cXG5cXG4uY3VzdG9tQnRuIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM3Y2IwNmY7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICBwYWRkaW5nOiA1cHggMTBweDtcXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gIGNvbG9yOiB3aGl0ZTsgfVxcblxcbi5oZWFkZXJJbmZvIHtcXG4gIGRpc3BsYXk6IGZsZXg7IH1cXG5cXG4ubmF2U2VjdGlvbiB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcXG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcXG4gIHdpZHRoOiAxMDAlOyB9XFxuXFxuLm5hdldyYXBwZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKTtcXG4gIGJvcmRlci1yYWRpdXM6IDVweDsgfVxcblxcbi5uYXZUZXh0IHtcXG4gIGNvbG9yOiB3aGl0ZTtcXG4gIHBhZGRpbmc6IDEwcHggMTBweDtcXG4gIGZvbnQtc2l6ZTogMTNweDsgfVxcblxcbi5uYXZUZXh0Om50aC1jaGlsZCgxKSB7XFxuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMik7IH1cXG5cXG4ubmF2VGV4dDpudGgtbGFzdC1jaGlsZCgxKSB7XFxuICBib3JkZXItbGVmdDogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKTsgfVxcblxcbi5vZmZlci1zZWN0aW9uIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzdjYjE2ZjsgfVxcbiAgLm9mZmVyLXNlY3Rpb24gLmltYWdlIHtcXG4gICAgd2lkdGg6IDM1JTtcXG4gICAgaGVpZ2h0OiA0MjNweDtcXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsgfVxcbiAgLm9mZmVyLXNlY3Rpb24gLmNvbnRlbnQge1xcbiAgICBwYWRkaW5nOiAwIDEwMHB4OyB9XFxuICAgIC5vZmZlci1zZWN0aW9uIC5jb250ZW50IC5tYWluLXRpdGxlIHtcXG4gICAgICBmb250LXdlaWdodDogMzAwICFpbXBvcnRhbnQ7XFxuICAgICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemUgIWltcG9ydGFudDtcXG4gICAgICBmb250LXNpemU6IDQwcHggIWltcG9ydGFudDtcXG4gICAgICBjb2xvcjogd2hpdGUgIWltcG9ydGFudDtcXG4gICAgICBtYXJnaW46IDAgYXV0byAhaW1wb3J0YW50O1xcbiAgICAgIHRleHQtYWxpZ246IGxlZnQgIWltcG9ydGFudDtcXG4gICAgICBsZWZ0OiAwICFpbXBvcnRhbnQ7IH1cXG4gICAgLm9mZmVyLXNlY3Rpb24gLmNvbnRlbnQgLnBhcmFncmFwaCB7XFxuICAgICAgY29sb3I6IHdoaXRlICFpbXBvcnRhbnQ7XFxuICAgICAgbWFyZ2luLXRvcDogMzBweCAhaW1wb3J0YW50O1xcbiAgICAgIG1hcmdpbi1ib3R0b206IDQwcHg7IH1cXG4gICAgLm9mZmVyLXNlY3Rpb24gLmNvbnRlbnQgYnV0dG9uIHtcXG4gICAgICBiYWNrZ3JvdW5kOiAjNGM1NDVhICFpbXBvcnRhbnQ7XFxuICAgICAgY29sb3I6IHdoaXRlICFpbXBvcnRhbnQ7XFxuICAgICAgYm9yZGVyOiBub25lICFpbXBvcnRhbnQ7XFxuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcXG4gICAgICBmb250LWZhbWlseTogJ1JvYm90bycsIHNhbnMtc2VyaWY7XFxuICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcXG4gICAgICBmb250LXNpemU6IDEzcHggIWltcG9ydGFudDtcXG4gICAgICBsZXR0ZXItc3BhY2luZzogMS4ycHg7IH1cXG5cXG5oZWFkZXIgLm1lbnUtaXRlbS1oYXMtY2hpbGRyZW4gdWwuZHJvcGRvd24tbWVudS5zaG93IHtcXG4gIG1pbi13aWR0aDogMTgwcHg7IH1cXG5cXG4uYnV0dG9uLXNlY3Rpb24ge1xcbiAgd2lkdGg6IDIwMHB4OyB9XFxuXCIsIFwiXCJdKTtcbi8vIEV4cG9ydHNcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1c2VTb3VyY2VNYXApIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApO1xuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICByZXR1cm4gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGNvbnRlbnQsIFwifVwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbignJyk7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiAobW9kdWxlcywgbWVkaWFRdWVyeSwgZGVkdXBlKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSAnc3RyaW5nJykge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCAnJ11dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgIHZhciBpZCA9IHRoaXNbaV1bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbW9kdWxlcy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250aW51ZVxuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsyXSA9IFwiXCIuY29uY2F0KG1lZGlhUXVlcnksIFwiIGFuZCBcIikuY29uY2F0KGl0ZW1bMl0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59O1xuXG5mdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgJyc7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuXG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh1c2VTb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgPT09ICdmdW5jdGlvbicpIHtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IHRvQ29tbWVudChjc3NNYXBwaW5nKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8ICcnKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcblxuXG5mdW5jdGlvbiB0b0NvbW1lbnQoc291cmNlTWFwKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICByZXR1cm4gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xufSIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgaXNPbGRJRSA9IGZ1bmN0aW9uIGlzT2xkSUUoKSB7XG4gIHZhciBtZW1vO1xuICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUoKSB7XG4gICAgaWYgKHR5cGVvZiBtZW1vID09PSAndW5kZWZpbmVkJykge1xuICAgICAgLy8gVGVzdCBmb3IgSUUgPD0gOSBhcyBwcm9wb3NlZCBieSBCcm93c2VyaGFja3NcbiAgICAgIC8vIEBzZWUgaHR0cDovL2Jyb3dzZXJoYWNrcy5jb20vI2hhY2stZTcxZDg2OTJmNjUzMzQxNzNmZWU3MTVjMjIyY2I4MDVcbiAgICAgIC8vIFRlc3RzIGZvciBleGlzdGVuY2Ugb2Ygc3RhbmRhcmQgZ2xvYmFscyBpcyB0byBhbGxvdyBzdHlsZS1sb2FkZXJcbiAgICAgIC8vIHRvIG9wZXJhdGUgY29ycmVjdGx5IGludG8gbm9uLXN0YW5kYXJkIGVudmlyb25tZW50c1xuICAgICAgLy8gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlci9pc3N1ZXMvMTc3XG4gICAgICBtZW1vID0gQm9vbGVhbih3aW5kb3cgJiYgZG9jdW1lbnQgJiYgZG9jdW1lbnQuYWxsICYmICF3aW5kb3cuYXRvYik7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1lbW87XG4gIH07XG59KCk7XG5cbnZhciBnZXRUYXJnZXQgPSBmdW5jdGlvbiBnZXRUYXJnZXQoKSB7XG4gIHZhciBtZW1vID0ge307XG4gIHJldHVybiBmdW5jdGlvbiBtZW1vcml6ZSh0YXJnZXQpIHtcbiAgICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbiAgfTtcbn0oKTtcblxudmFyIHN0eWxlc0luRG9tID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5Eb20ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5Eb21baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGVzSW5Eb20ucHVzaCh7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IGFkZFN0eWxlKG9iaiwgb3B0aW9ucyksXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gIHZhciBhdHRyaWJ1dGVzID0gb3B0aW9ucy5hdHRyaWJ1dGVzIHx8IHt9O1xuXG4gIGlmICh0eXBlb2YgYXR0cmlidXRlcy5ub25jZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09ICd1bmRlZmluZWQnID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gICAgaWYgKG5vbmNlKSB7XG4gICAgICBhdHRyaWJ1dGVzLm5vbmNlID0gbm9uY2U7XG4gICAgfVxuICB9XG5cbiAgT2JqZWN0LmtleXMoYXR0cmlidXRlcykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKGtleSwgYXR0cmlidXRlc1trZXldKTtcbiAgfSk7XG5cbiAgaWYgKHR5cGVvZiBvcHRpb25zLmluc2VydCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIG9wdGlvbnMuaW5zZXJ0KHN0eWxlKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KG9wdGlvbnMuaW5zZXJ0IHx8ICdoZWFkJyk7XG5cbiAgICBpZiAoIXRhcmdldCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgICB9XG5cbiAgICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuICB9XG5cbiAgcmV0dXJuIHN0eWxlO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZS5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZSk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG52YXIgcmVwbGFjZVRleHQgPSBmdW5jdGlvbiByZXBsYWNlVGV4dCgpIHtcbiAgdmFyIHRleHRTdG9yZSA9IFtdO1xuICByZXR1cm4gZnVuY3Rpb24gcmVwbGFjZShpbmRleCwgcmVwbGFjZW1lbnQpIHtcbiAgICB0ZXh0U3RvcmVbaW5kZXhdID0gcmVwbGFjZW1lbnQ7XG4gICAgcmV0dXJuIHRleHRTdG9yZS5maWx0ZXIoQm9vbGVhbikuam9pbignXFxuJyk7XG4gIH07XG59KCk7XG5cbmZ1bmN0aW9uIGFwcGx5VG9TaW5nbGV0b25UYWcoc3R5bGUsIGluZGV4LCByZW1vdmUsIG9iaikge1xuICB2YXIgY3NzID0gcmVtb3ZlID8gJycgOiBvYmoubWVkaWEgPyBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpLmNvbmNhdChvYmouY3NzLCBcIn1cIikgOiBvYmouY3NzOyAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG4gIGlmIChzdHlsZS5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gcmVwbGFjZVRleHQoaW5kZXgsIGNzcyk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIGNzc05vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpO1xuICAgIHZhciBjaGlsZE5vZGVzID0gc3R5bGUuY2hpbGROb2RlcztcblxuICAgIGlmIChjaGlsZE5vZGVzW2luZGV4XSkge1xuICAgICAgc3R5bGUucmVtb3ZlQ2hpbGQoY2hpbGROb2Rlc1tpbmRleF0pO1xuICAgIH1cblxuICAgIGlmIChjaGlsZE5vZGVzLmxlbmd0aCkge1xuICAgICAgc3R5bGUuaW5zZXJ0QmVmb3JlKGNzc05vZGUsIGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGUuYXBwZW5kQ2hpbGQoY3NzTm9kZSk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGFwcGx5VG9UYWcoc3R5bGUsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gb2JqLmNzcztcbiAgdmFyIG1lZGlhID0gb2JqLm1lZGlhO1xuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAobWVkaWEpIHtcbiAgICBzdHlsZS5zZXRBdHRyaWJ1dGUoJ21lZGlhJywgbWVkaWEpO1xuICB9IGVsc2Uge1xuICAgIHN0eWxlLnJlbW92ZUF0dHJpYnV0ZSgnbWVkaWEnKTtcbiAgfVxuXG4gIGlmIChzb3VyY2VNYXAgJiYgYnRvYSkge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGUuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXIgc2luZ2xldG9uQ291bnRlciA9IDA7XG5cbmZ1bmN0aW9uIGFkZFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgc3R5bGU7XG4gIHZhciB1cGRhdGU7XG4gIHZhciByZW1vdmU7XG5cbiAgaWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG4gICAgdmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG4gICAgc3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSk7XG4gICAgdXBkYXRlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCBmYWxzZSk7XG4gICAgcmVtb3ZlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCB0cnVlKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZSA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgICB1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXG4gICAgcmVtb3ZlID0gZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcbiAgICB9O1xuICB9XG5cbiAgdXBkYXRlKG9iaik7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZShuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTsgLy8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG4gIC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2VcblxuICBpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gJ2Jvb2xlYW4nKSB7XG4gICAgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG4gIH1cblxuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG5ld0xpc3QpICE9PSAnW29iamVjdCBBcnJheV0nKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRG9tW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRvbVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRvbS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsImltcG9ydCBSb3V0ZXIgZnJvbSAnLi91dGlsL1JvdXRlcidcclxuaW1wb3J0IGNvbW1vbiBmcm9tICcuL3JvdXRlcy9jb21tb24nXHJcbmltcG9ydCAnLi4vc3R5bGVzL21haW4uc2NzcydcclxuXHJcbmNvbnN0IHJvdXRlcyA9IG5ldyBSb3V0ZXIoe1xyXG5cclxuICAgIC8vIEFsbCBwYWdlc1xyXG4gICAgY29tbW9uLFxyXG5cclxufSlcclxuXHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9PiB7IHJvdXRlcy5sb2FkRXZlbnRzKCkgfSkiLCJleHBvcnQgZGVmYXVsdCB7XHJcblxyXG4gICAgaW5pdCgpIHtcclxuICAgIFxyXG4gICAgICAgIHRoaXMuZGlzcGxheVN1Yk1lbnVPbkhvdmVyKClcclxuXHJcbiAgICB9LFxyXG5cclxuICAgIGZpbmFsaXplKCkge1xyXG4gICAgICBcclxuICAgICAgICBcclxuXHJcbiAgICB9LFxyXG5cclxuICAgIGRpc3BsYXlTdWJNZW51T25Ib3ZlcigpIHtcclxuICAgICAgICBsZXQgaXRlbXNXaXRoQ2hpbGQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsPEhUTUxFbGVtZW50PignLm1lbnUtaXRlbS1oYXMtY2hpbGRyZW4nKVxyXG4gICAgICAgIGl0ZW1zV2l0aENoaWxkLmZvckVhY2goaXRlbSA9PiB7XHJcbiAgICAgICAgICAgIGl0ZW0ub25tb3VzZWVudGVyID0gZSA9PiB7XHJcbiAgICAgICAgICAgICAgICBsZXQgdGFyZ2V0ID0gZS50YXJnZXQgYXMgSFRNTEVsZW1lbnRcclxuICAgICAgICAgICAgICAgIGxldCBkcm9wZG93bk1lbnUgPSB0YXJnZXQuY2hpbGRyZW5bMV0gYXMgSFRNTEVsZW1lbnRcclxuICAgICAgICAgICAgICAgIGRyb3Bkb3duTWVudS5jbGFzc0xpc3QuYWRkKCdzaG93JylcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpdGVtLm9ubW91c2VsZWF2ZSA9IGUgPT4ge1xyXG4gICAgICAgICAgICAgICAgbGV0IHRhcmdldCA9IGUudGFyZ2V0IGFzIEhUTUxFbGVtZW50XHJcbiAgICAgICAgICAgICAgICBsZXQgZHJvcGRvd25NZW51ID0gdGFyZ2V0LmNoaWxkcmVuWzFdIGFzIEhUTUxFbGVtZW50XHJcbiAgICAgICAgICAgICAgICBkcm9wZG93bk1lbnUuY2xhc3NMaXN0LnJlbW92ZSgnc2hvdycpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxuICB9IiwiaW1wb3J0IGNhbWVsQ2FzZSBmcm9tICcuL2NhbWVsQ2FzZSc7XHJcblxyXG4vKipcclxuICogRE9NLWJhc2VkIFJvdXRpbmdcclxuICpcclxuICogQmFzZWQgb24ge0BsaW5rIGh0dHA6Ly9nb28uZ2wvRVVUaTUzfE1hcmt1cC1iYXNlZCBVbm9idHJ1c2l2ZSBDb21wcmVoZW5zaXZlIERPTS1yZWFkeSBFeGVjdXRpb259IGJ5IFBhdWwgSXJpc2hcclxuICpcclxuICogVGhlIHJvdXRpbmcgZmlyZXMgYWxsIGNvbW1vbiBzY3JpcHRzLCBmb2xsb3dlZCBieSB0aGUgcGFnZSBzcGVjaWZpYyBzY3JpcHRzLlxyXG4gKiBBZGQgYWRkaXRpb25hbCBldmVudHMgZm9yIG1vcmUgY29udHJvbCBvdmVyIHRpbWluZyBlLmcuIGEgZmluYWxpemUgZXZlbnRcclxuICovXHJcbmNsYXNzIFJvdXRlciB7XHJcblxyXG4gIC8qKlxyXG4gICAqIENyZWF0ZSBhIG5ldyBSb3V0ZXJcclxuICAgKiBAcGFyYW0ge09iamVjdH0gcm91dGVzXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3Iocm91dGVzKSB7XHJcbiAgICB0aGlzLnJvdXRlcyA9IHJvdXRlcztcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEZpcmUgUm91dGVyIGV2ZW50c1xyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSByb3V0ZSBET00tYmFzZWQgcm91dGUgZGVyaXZlZCBmcm9tIGJvZHkgY2xhc3NlcyAoYDxib2R5IGNsYXNzPVwiLi4uXCI+YClcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gW2V2ZW50XSBFdmVudHMgb24gdGhlIHJvdXRlLiBCeSBkZWZhdWx0LCBgaW5pdGAgYW5kIGBmaW5hbGl6ZWAgZXZlbnRzIGFyZSBjYWxsZWQuXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IFthcmddIEFueSBjdXN0b20gYXJndW1lbnQgdG8gYmUgcGFzc2VkIHRvIHRoZSBldmVudC5cclxuICAgKi9cclxuICBmaXJlKHJvdXRlLCBldmVudCA9ICdpbml0JywgYXJnKSB7XHJcbiAgICBkb2N1bWVudC5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudCgncm91dGVkJywge1xyXG4gICAgICBidWJibGVzOiB0cnVlLFxyXG4gICAgICBkZXRhaWw6IHtcclxuICAgICAgICByb3V0ZSxcclxuICAgICAgICBmbjogZXZlbnQsXHJcbiAgICAgIH0sXHJcbiAgICB9KSk7XHJcbiAgICBcclxuICAgIGNvbnN0IGZpcmUgPSByb3V0ZSAhPT0gJycgJiYgdGhpcy5yb3V0ZXNbcm91dGVdICYmIHR5cGVvZiB0aGlzLnJvdXRlc1tyb3V0ZV1bZXZlbnRdID09PSAnZnVuY3Rpb24nO1xyXG4gICAgaWYgKGZpcmUpIHtcclxuICAgICAgdGhpcy5yb3V0ZXNbcm91dGVdW2V2ZW50XShhcmcpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQXV0b21hdGljYWxseSBsb2FkIGFuZCBmaXJlIFJvdXRlciBldmVudHNcclxuICAgKlxyXG4gICAqIEV2ZW50cyBhcmUgZmlyZWQgaW4gdGhlIGZvbGxvd2luZyBvcmRlcjpcclxuICAgKiAgKiBjb21tb24gaW5pdFxyXG4gICAqICAqIHBhZ2Utc3BlY2lmaWMgaW5pdFxyXG4gICAqICAqIHBhZ2Utc3BlY2lmaWMgZmluYWxpemVcclxuICAgKiAgKiBjb21tb24gZmluYWxpemVcclxuICAgKi9cclxuICBsb2FkRXZlbnRzKCkge1xyXG4gICAgLy8gRmlyZSBjb21tb24gaW5pdCBKU1xyXG4gICAgdGhpcy5maXJlKCdjb21tb24nKTtcclxuXHJcbiAgICAvLyBGaXJlIHBhZ2Utc3BlY2lmaWMgaW5pdCBKUywgYW5kIHRoZW4gZmluYWxpemUgSlNcclxuICAgIGRvY3VtZW50LmJvZHkuY2xhc3NOYW1lXHJcbiAgICAgIC50b0xvd2VyQ2FzZSgpXHJcbiAgICAgIC5yZXBsYWNlKC8tL2csICdfJylcclxuICAgICAgLnNwbGl0KC9cXHMrLylcclxuICAgICAgLm1hcChjYW1lbENhc2UpXHJcbiAgICAgIC5mb3JFYWNoKChjbGFzc05hbWUpID0+IHtcclxuICAgICAgICB0aGlzLmZpcmUoY2xhc3NOYW1lKTtcclxuICAgICAgICB0aGlzLmZpcmUoY2xhc3NOYW1lLCAnZmluYWxpemUnKTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgLy8gRmlyZSBjb21tb24gZmluYWxpemUgSlNcclxuICAgIHRoaXMuZmlyZSgnY29tbW9uJywgJ2ZpbmFsaXplJyk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBSb3V0ZXI7XHJcbiIsIi8qKlxyXG4gKiB0aGUgbW9zdCB0ZXJyaWJsZSBjYW1lbGl6ZXIgb24gdGhlIGludGVybmV0LCBndWFyYW50ZWVkIVxyXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyIFN0cmluZyB0aGF0IGlzbid0IGNhbWVsLWNhc2UsIGUuZy4sIENBTWVMX0NhU0VpUy1oYXJEXHJcbiAqIEByZXR1cm4ge3N0cmluZ30gU3RyaW5nIGNvbnZlcnRlZCB0byBjYW1lbC1jYXNlLCBlLmcuLCBjYW1lbENhc2VJc0hhcmRcclxuICovXHJcbmV4cG9ydCBkZWZhdWx0IHN0ciA9PiBgJHtzdHIuY2hhckF0KDApLnRvTG93ZXJDYXNlKCl9JHtzdHIucmVwbGFjZSgvW1xcV19dL2csICd8Jykuc3BsaXQoJ3wnKVxyXG4gIC5tYXAocGFydCA9PiBgJHtwYXJ0LmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpfSR7cGFydC5zbGljZSgxKX1gKVxyXG4gIC5qb2luKCcnKVxyXG4gIC5zbGljZSgxKX1gO1xyXG4iLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL21haW4uc2Nzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307Il0sInNvdXJjZVJvb3QiOiIifQ==